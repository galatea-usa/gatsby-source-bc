{"version":3,"sources":["../src/utils/convertValues.js"],"names":["handleConversionStringToLowercase","e","toLowerCase","handleConversionStringToUppercase","toUpperCase","handleConversionStringToTitleCase","replace","txt","charAt","substr","handleConversionStringToCamelCase","str","handleConversionStringToSnakeCase","handleConversionStringToKebabCase","handleConversionStringToConstantCase","handleConversionStringToSentenceCase","handleConversionStringToNumber","Number","handleConversionStringToBoolean","handleConversionStringToArray","split","handleConversionStringToObject","JSON","parse","handleConversionObjectToString","stringify"],"mappings":";;;;;AAKO,IAAMA,iCAAiC,GAAG,SAApCA,iCAAoC,CAACC,CAAD,EAAO;AACvD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACC,WAAF,EAAxB,GAA0CD,CAAjD;AACA,CAFM;;;;AAKA,IAAME,iCAAiC,GAAG,SAApCA,iCAAoC,CAACF,CAAD,EAAO;AACvD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACG,WAAF,EAAxB,GAA0CH,CAAjD;AACA,CAFM;;;;AAKA,IAAMI,iCAAiC,GAAG,SAApCA,iCAAoC,CAACJ,CAAD,EAAO;AACvD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACK,OAAF,CAAU,QAAV,EAAoB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcJ,WAAd,KAA8BG,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcP,WAAd,EAAvC;AAAA,GAApB,CAAxB,GAAkHD,CAAzH;AACA,CAFM;;;;AAKA,IAAMS,iCAAiC,GAAG,SAApCA,iCAAoC,CAACT,CAAD,EAAO;AACvD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACK,OAAF,CAAU,UAAV,EAAsB,KAAtB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,UAACK,GAAD;AAAA,WAASA,GAAG,CAACP,WAAJ,EAAT;AAAA,GAA3C,CAAxB,GAAiGH,CAAxG;AACA,CAFM;;;;AAKA,IAAMW,iCAAiC,GAAG,SAApCA,iCAAoC,CAACX,CAAD,EAAO;AACvD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACK,OAAF,CAAU,KAAV,EAAiB,GAAjB,EAAsBJ,WAAtB,EAAxB,GAA8DD,CAArE;AACA,CAFM;;;;AAKA,IAAMY,iCAAiC,GAAG,SAApCA,iCAAoC,CAACZ,CAAD,EAAO;AACvD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACK,OAAF,CAAU,KAAV,EAAiB,GAAjB,EAAsBJ,WAAtB,EAAxB,GAA8DD,CAArE;AACA,CAFM;;;;AAKA,IAAMa,oCAAoC,GAAG,SAAvCA,oCAAuC,CAACb,CAAD,EAAO;AAC1D,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACK,OAAF,CAAU,KAAV,EAAiB,GAAjB,EAAsBF,WAAtB,EAAxB,GAA8DH,CAArE;AACA,CAFM;;;;AAKA,IAAMc,oCAAoC,GAAG,SAAvCA,oCAAuC,CAACd,CAAD,EAAO;AAC1D,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACK,OAAF,CAAU,KAAV,EAAiB,GAAjB,EAAsBA,OAAtB,CAA8B,QAA9B,EAAwC,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcJ,WAAd,KAA8BG,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAcP,WAAd,EAAvC;AAAA,GAAxC,CAAxB,GAAsID,CAA7I;AACA,CAFM;;;;AAKA,IAAMe,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACf,CAAD,EAAO;AACpD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBgB,MAAM,CAAChB,CAAD,CAA9B,GAAoCA,CAA3C;AACA,CAFM;;;;AAKA,IAAMiB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACjB,CAAD,EAAO;AACrD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,KAAK,MAA9B,GAAuCA,CAA9C;AACA,CAFM;;;;AAKA,IAAMkB,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAClB,CAAD,EAAO;AACnD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBA,CAAC,CAACmB,KAAF,CAAQ,GAAR,CAAxB,GAAuCnB,CAA9C;AACA,CAFM;;;;AAKA,IAAMoB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACpB,CAAD,EAAO;AACpD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBqB,IAAI,CAACC,KAAL,CAAWtB,CAAX,CAAxB,GAAwCA,CAA/C;AACA,CAFM;;;;AASA,IAAMuB,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACvB,CAAD,EAAO;AACpD,SAAO,OAAOA,CAAP,KAAa,QAAb,GAAwBqB,IAAI,CAACG,SAAL,CAAexB,CAAf,CAAxB,GAA4CA,CAAnD;AACA,CAFM","sourcesContent":["/**\n * Strings conversion\n */\n\n// Handle conversion of string to lowercase\nexport const handleConversionStringToLowercase = (e) => {\n\treturn typeof e === \"string\" ? e.toLowerCase() : e;\n};\n\n// Handle conversion of string to uppercase\nexport const handleConversionStringToUppercase = (e) => {\n\treturn typeof e === \"string\" ? e.toUpperCase() : e;\n};\n\n// Handle conversion of string to title case\nexport const handleConversionStringToTitleCase = (e) => {\n\treturn typeof e === \"string\" ? e.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()) : e;\n};\n\n// Handle conversion of string to camel case\nexport const handleConversionStringToCamelCase = (e) => {\n\treturn typeof e === \"string\" ? e.replace(/([A-Z])/g, \" $1\").replace(/^./, (str) => str.toUpperCase()) : e;\n};\n\n// Handle conversion of string to snake case\nexport const handleConversionStringToSnakeCase = (e) => {\n\treturn typeof e === \"string\" ? e.replace(/\\s/g, \"_\").toLowerCase() : e;\n};\n\n// Handle conversion of string to kebab case\nexport const handleConversionStringToKebabCase = (e) => {\n\treturn typeof e === \"string\" ? e.replace(/\\s/g, \"-\").toLowerCase() : e;\n};\n\n// Handle conversion of string to constant case\nexport const handleConversionStringToConstantCase = (e) => {\n\treturn typeof e === \"string\" ? e.replace(/\\s/g, \"_\").toUpperCase() : e;\n};\n\n// Handle conversion of string to sentence case\nexport const handleConversionStringToSentenceCase = (e) => {\n\treturn typeof e === \"string\" ? e.replace(/\\s/g, \" \").replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()) : e;\n};\n\n// Handle conversion of string to number\nexport const handleConversionStringToNumber = (e) => {\n\treturn typeof e === \"string\" ? Number(e) : e;\n};\n\n// Handle conversion of string to boolean\nexport const handleConversionStringToBoolean = (e) => {\n\treturn typeof e === \"string\" ? e === \"true\" : e;\n};\n\n// Handle conversion of string to array\nexport const handleConversionStringToArray = (e) => {\n\treturn typeof e === \"string\" ? e.split(\",\") : e;\n};\n\n// Handle conversion of string to object\nexport const handleConversionStringToObject = (e) => {\n\treturn typeof e === \"string\" ? JSON.parse(e) : e;\n};\n\n/**\n * Objects conversion\n */\n\n// Handle conversion of object to string\nexport const handleConversionObjectToString = (e) => {\n\treturn typeof e === \"object\" ? JSON.stringify(e) : e;\n};\n"],"file":"convertValues.js"}